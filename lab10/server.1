Script started on 2020-03-23 19:14:55-0400
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10wolf:~/Desktop/csc209/pintocra/lab10$ gdb bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break set_up_server_socket
Breakpoint 1 at 0xf18: file socket.c, line 35.
(gdb) next
The program is not being run.
(gdb) run
Starting program: /h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10/bufserver 

Breakpoint 1, set_up_server_socket (self=0x555555757260, num_queue=5) at socket.c:35
35      int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
36          int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) 
37          if (soc < 0) {
(gdb) 
44          int on = 1;
(gdb) 
45          int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) 
47          if (status < 0) {
(gdb) 
53          if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) help
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Command name abbreviations are allowed if unambiguous.
(gdb) quit
A debugging session is active.

        Inferior 1 [process 54735] will be killed.

Quit anyway? (y or n) y
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10wolf:~/Desktop/csc209/pintocra/lab10$ make &&[K[K[Kcle[K[K[K clean && make
rm *.o readserver randclient bufserver
gcc -DPORT=50147 -g -Wall -std=gnu99 -c readserver.c
gcc -DPORT=50147 -g -Wall -std=gnu99 -c socket.c
gcc -DPORT=50147 -g -Wall -std=gnu99 -o readserver readserver.o socket.o
gcc -DPORT=50147 -g -Wall -std=gnu99 -c randclient.c
gcc -DPORT=50147 -g -Wall -std=gnu99 -o randclient randclient.o socket.o
gcc -DPORT=50147 -g -Wall -std=gnu99 -c bufserver.c
gcc -DPORT=50147 -g -Wall -std=gnu99 -o bufserver bufserver.o socket.o
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10wolf:~/Desktop/csc209/pintocra/lab10$ gdb bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break set_up_server_socket
Breakpoint 1 at 0xf18: file socket.c, line 35.
(gdb) run[Kn
Starting program: /h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10/bufserver 

Breakpoint 1, set_up_server_socket (self=0x555555757260, num_queue=5) at socket.c:35
35      int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
36          int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) 
37          if (soc < 0) {
(gdb) 
44          int on = 1;
(gdb) 
45          int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) 
47          if (status < 0) {
(gdb) 
53          if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) 
60          if (listen(soc, num_queue) < 0) {
(gdb) 
66          return soc;
(gdb) 
67      }
(gdb) 
main () at bufserver.c:27
27              int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...
New connection accepted from 127.0.0.1:45820
28              if (fd < 0) {
(gdb) 
33              char buf[BUFSIZE] = {'\0'};
(gdb) 
34              int inbuf = 0;           // How many bytes currently in buffer?
(gdb) 
35              int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36              char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where - 2] = '\0';
(gdb) 
60                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
66                      inbuf -= where;
(gdb) 
70                      memmove(buf, &buf[where], inbuf * sizeof(char));
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
73                  room = BUFSIZE - inbuf;
(gdb) 
74                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where - 2] = '\0';
(gdb) 
60                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
66                      inbuf -= where;
(gdb) 
70                      memmove(buf, &buf[where], inbuf * sizeof(char));
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
73                  room = BUFSIZE - inbuf;
(gdb) 
74                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where - 2] = '\0';
(gdb) 
60                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
66                      inbuf -= where;
(gdb) 
70                      memmove(buf, &buf[where], inbuf * sizeof(char));
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
73                  room = BUFSIZE - inbuf;
(gdb) 
74                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where - 2] = '\0';
(gdb) 
60                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
66                      inbuf -= where;
(gdb) 
70                      memmove(buf, &buf[where], inbuf * sizeof(char));
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
73                  room = BUFSIZE - inbuf;
(gdb) 
74                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41                  inbuf += nbytes;
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58                      buf[where - 2] = '\0';
(gdb) 
60                      printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
66                      inbuf -= where;
(gdb) 
70                      memmove(buf, &buf[where], inbuf * sizeof(char));
(gdb) 
52                  while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
73                  room = BUFSIZE - inbuf;
(gdb) 
74                  after = &buf[inbuf];
(gdb) 
39              while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
77              close(fd);
(gdb) 
27              int fd = accept_connection(listenfd);
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

        Inferior 1 [process 56252] will be killed.

Quit anyway? (y or n) y
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab10wolf:~/Desktop/csc209/pintocra/lab10$ exit
exit

Script done on 2020-03-23 19:28:19-0400
