Script started on 2020-02-14 16:00:54-0500
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6wolf:~/Desktop/csc209/pintocra/lab6$ gdb ./overflow
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./overflow...done.
(gdb) break main
Breakpoint 1 at 0x742: file overflow.c, line 6.
(gdb) display
(gdb) i[Kdisplay a
No symbol "a" in current context.
(gdb) list
1	#include <stdio.h>
2	
3	#define SIZE 4
4	#define OVERFLOW 5
5	
6	int main() {
7	    int index = 0;
8	    int i;
9	    int before[SIZE] = {10, 10, 10, 10};
10	    int a[SIZE] = {0, 0, 0, 0};
(gdb) run
Starting program: /h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6/overflow 

Breakpoint 1, main () at overflow.c:6
6	int main() {
(gdb) list
1	#include <stdio.h>
2	
3	#define SIZE 4
4	#define OVERFLOW 5
5	
6	int main() {
7	    int index = 0;
8	    int i;
9	    int before[SIZE] = {10, 10, 10, 10};
10	    int a[SIZE] = {0, 0, 0, 0};
(gdb) next
7	    int index = 0;
(gdb) 
9	    int before[SIZE] = {10, 10, 10, 10};
(gdb) 
10	    int a[SIZE] = {0, 0, 0, 0};
(gdb) 
11	    int after[SIZE] = {10, 10, 10, 10};
(gdb) 
13	    printf("Address of the variables:\n");
(gdb) 
Address of the variables:
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe910 -> &after[0]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe914 -> &after[1]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe918 -> &after[2]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe91c -> &after[3]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
17	    for (index = 0; index < SIZE; index++) {
(gdb) 
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
(gdb) 
7fffffffe900 -> &a[0]
17	    for (index = 0; index < SIZE; index++) {
(gdb) list
12	
13	    printf("Address of the variables:\n");
14	    for (index = 0; index < SIZE; index++) {
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
16	    }
17	    for (index = 0; index < SIZE; index++) {
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
19	    }
20	    for (index = 0; index < SIZE; index++) {
21	        printf("%lx -> &before[%d]\n", (unsigned long) &before[index], index);
(gdb) quit
A debugging session is active.

	Inferior 1 [process 46463] will be killed.

Quit anyway? (y or n) y
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6wolf:~/Desktop/csc209/pintocra/lab6$ gdb ./overflow
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./overflow...done.
(gdb) break 14
Breakpoint 1 at 0x7b8: file overflow.c, line 14.
(gdb) break 14[K7
Breakpoint 2 at 0x7ff: file overflow.c, line 17.
(gdb) break 11
Breakpoint 3 at 0x790: file overflow.c, line 11.
(gdb) run
Starting program: /h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6/overflow 

Breakpoint 3, main () at overflow.c:11
11	    int after[SIZE] = {10, 10, 10, 10};
(gdb) continie[K[Kue
Continuing.
Address of the variables:

Breakpoint 1, main () at overflow.c:14
14	    for (index = 0; index < SIZE; index++) {
(gdb) continue
Continuing.
7fffffffe910 -> &after[0]
7fffffffe914 -> &after[1]
7fffffffe918 -> &after[2]
7fffffffe91c -> &after[3]

Breakpoint 2, main () at overflow.c:17
17	    for (index = 0; index < SIZE; index++) {
(gdb) continue
Continuing.
7fffffffe900 -> &a[0]
7fffffffe904 -> &a[1]
7fffffffe908 -> &a[2]
7fffffffe90c -> &a[3]
7fffffffe8f0 -> &before[0]
7fffffffe8f4 -> &before[1]
7fffffffe8f8 -> &before[2]
7fffffffe8fc -> &before[3]
7fffffffe8ec -> &i
7fffffffe8e8 -> &index

Initial values:
i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}

i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}
i = 1
before = {10, 10, 10, 10}
a = {0, 10, 0, 0}
after = {10, 10, 10, 10}
i = 2
before = {10, 10, 10, 10}
a = {0, 10, 20, 0}
after = {10, 10, 10, 10}
i = 3
before = {10, 10, 10, 10}
a = {0, 10, 20, 30}
after = {10, 10, 10, 10}
i = 4
before = {10, 10, 10, 10}
a = {0, 10, 20, 30}
after = {40, 10, 10, 10}
[Inferior 1 (process 46844) exited normally]
(gdb) next
The program is not being run.
(gdb) nextcontinue[C[C[C[C[C[C[5Prunbreak 1174[K[K[K[K[K[K[K[Kgdb ./overfow
Undefined command: "gdb".  Try "help".
(gdb) run
Starting program: /h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6/overflow 

Breakpoint 3, main () at overflow.c:11
11	    int after[SIZE] = {10, 10, 10, 10};
(gdb) next
13	    printf("Address of the variables:\n");
(gdb) e[K
Address of the variables:

Breakpoint 1, main () at overflow.c:14
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe910 -> &after[0]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe914 -> &after[1]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe918 -> &after[2]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 
15	        printf("%lx -> &after[%d]\n", (unsigned long) &after[index], index);
(gdb) 
7fffffffe91c -> &after[3]
14	    for (index = 0; index < SIZE; index++) {
(gdb) 

Breakpoint 2, main () at overflow.c:17
17	    for (index = 0; index < SIZE; index++) {
(gdb) dip[Ksplay
(gdb) 
(gdb) next
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
(gdb) 
7fffffffe900 -> &a[0]
17	    for (index = 0; index < SIZE; index++) {
(gdb) 
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
(gdb) 
7fffffffe904 -> &a[1]
17	    for (index = 0; index < SIZE; index++) {
(gdb) 
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
(gdb) print &(after[0])
$1 = (int *) 0x7fffffffe910
(gdb) print &(after[0])[C[1P])4])[C[C[1P[4])[1P[4])[1P[4])[1P[4])[1P[4])a[4])[C[C[C[C
$2 = (int *) 0x7fffffffe910
(gdb) next
7fffffffe908 -> &a[2]
17	    for (index = 0; index < SIZE; index++) {
(gdb) 
18	        printf("%lx -> &a[%d]\n", (unsigned long) &a[index], index);
(gdb) 
7fffffffe90c -> &a[3]
17	    for (index = 0; index < SIZE; index++) {
(gdb) 
20	    for (index = 0; index < SIZE; index++) {
(gdb) 
21	        printf("%lx -> &before[%d]\n", (unsigned long) &before[index], index);
(gdb) 
7fffffffe8f0 -> &before[0]
20	    for (index = 0; index < SIZE; index++) {
(gdb) 
21	        printf("%lx -> &before[%d]\n", (unsigned long) &before[index], index);
(gdb) nextprint &(a[4])fter[0])
$3 = (int *) 0x7fffffffe910
(gdb) print &(after[0])[C[C[C[C[C[Cnext[Kprint &(a[4])
$4 = (int *) 0x7fffffffe910
(gdb) quit
A debugging session is active.

	Inferior 1 [process 46893] will be killed.

Quit anyway? (y or n) y
]0;pintocra@wolf:/h/u11/c8/00/pintocra/Desktop/csc209/pintocra/lab6wolf:~/Desktop/csc209/pintocra/lab6$ exit
exit

Script done on 2020-02-14 16:12:12-0500
